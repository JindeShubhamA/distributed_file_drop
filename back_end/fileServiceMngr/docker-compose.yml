version: "2"
services:
  app:
    build: ./app
    links:
      #- sqldb
      - mongodb
    ports:
      - "5000:5000"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "demo2_app"
    volumes:
    - ./logs:/logs
#  sqldb:
#    image: mysql:5.7
##    environment:
##        MYSQL_DATABASE: "fileServiceMgr"
##        MYSQL_ROOT_PASSWORD: "root"
##        MYSQL_USER: "group12"
##        MYSQL_PASSWORD: "group12"
#    ports:
#      - "32000:3306"
#    environment:
#      MYSQL_ROOT_PASSWORD: root
##      MYSQL_DATABASE: fileServiceMgr
##      MYSQL_USER: root
#    volumes:
#      - ./db:/docker-entrypoint-initdb.d/:ro
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
#    command: mongod --auth
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: root
#      MONGO_INITDB_DATABASE: fileServiceMngr
#      MONGODB_DATA_DIR: /data/db
#      MONDODB_LOG_DIR: /dev/null
#    volumes:
#      - mongodbdata:/data/db
    ports:
      - "27017:27017"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
      - logstash
#    logging:
#      driver: gelf
#      options:
#        gelf-address: "udp://localhost:12201"
#        tag: "demo2_kibana"
  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    links:
      - elasticsearch
    volumes:
      - .:/etc/logstash
      - ./logs:/logs
    command: logstash -f /etc/logstash/app/logstash.conf
    ports:
#      - 12201:12201/udp
       - "9600:9600"
    depends_on:
      - elasticsearch
